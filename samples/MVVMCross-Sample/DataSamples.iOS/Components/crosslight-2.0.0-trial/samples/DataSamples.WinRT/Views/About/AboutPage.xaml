<common:LayoutAwarePage
    x:Name="PageRoot"
    x:Class="DataSamples.WinRT.Views.AboutPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:DataSamples.WinRT.Views"
    xmlns:common="using:DataSamples.WinRT.Common"
    xmlns:Intersoft="using:Intersoft.Crosslight.WinRT"
    xmlns:Converters="using:DataSamples.WinRT.Converters"
    xmlns:CoreConverters="using:CrosslightApp.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Command="{Binding NavigationService.GoBackCommand}" Visibility="Collapsed" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Grid.Column="1" Text="About" VerticalAlignment="Center" Margin="0,10,0,0" Style="{StaticResource SubheaderTextStyle}"/>
        </Grid>

        <ScrollViewer
            x:Name="itemDetail"
            AutomationProperties.AutomationId="ItemDetailScrollViewer"
            Grid.Column="1"
            Grid.Row="1"
            Style="{StaticResource VerticalScrollViewerStyle}">

            <ScrollViewer.Resources>
                <Style TargetType="TextBlock" BasedOn="{StaticResource BodyTextStyle}"/>
            </ScrollViewer.Resources>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0" Width="400" HorizontalAlignment="Left">
                    <TextBlock Text="Intersoft Crosslight makes native cross-platform mobile development truly a breeze -- thanks to its innovative data binding framework that makes MVVM possible in the iOS and Android world." TextWrapping="Wrap"/>

                    <TextBlock Margin="0,20,0,0" Text="This collection of samples demonstrates the fundamental data binding capabilities supported in Crosslight such as collection binding and data change notification. When the collection is changd, the views such as TableView and CollectionView will be automatically synchronized -- complete with animation and UX that conforms to platform guidelines. This enables application UI code reuse which ultimately increases overall code reusability to 95%." TextWrapping="Wrap"/>
                    <Button x:Name="SendFeedbackButton" Content="Learn More" Command="{Binding SendFeedbackCommand}" Margin="0,20,0,0"  HorizontalAlignment="Center"/>
                </StackPanel>
                <TextBlock Grid.Row="1" Width="400" Text="ApplicationContext provides numerous useful information such as platform and device info that you can reliably consume from within the ViewModel." HorizontalAlignment="Left" VerticalAlignment="Bottom" TextWrapping="Wrap"/>
            </Grid>


        </ScrollViewer>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
